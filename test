
# -*- coding: utf-8 -*-
"""
Created on Wed Oct 27 14:49:39 2021

@author: Bruger
"""
from parameters import Population, Simulation, World
import parameters
import reporting
import simulation

user_input = input("Options: Select 1 default parameter settings, 2 quick setup, 3 for advanced, 4 run, 5 for quit")

def parameters(user_input):
    user_input == 1
    print("Default settings for simulation")
    sim = para.Simulation()
    print(sim.__str__())
        
parameters(user_input)
    
    
def is_int(x):
    try:
        int(x)
        # print("Is int or bolean")
        return True
    except Exception:
        # print("The inputtede varible is not a integer: " + str(x))
        return False



def in_Between(x,above=0,below=10**3):
        
    # print("\nAbove")
    is_int(above)
    
    # print("\nbelow")
    is_int(below)
    
    
    # print("\nand")
    if int(above) < int(x) and int(below) > int(x):
        # print("Aproved")  ## slettes eller laves om når vi har styr på det hele 
        return True
    else:
        # print("not between: " + str(above) + " and " + str(below))
        return False    

    
    
def Quick_setup():
    

    Quick=[0,0,0,""] #    Quick=[Size_world,Size_pop,D_limit,Sim_mode]
    Text=["Size of the world: ","Size of the populations: ","Duration limit: ","Simulation mode: "]
    for n in range(len(Quick)):
        
        if is_int(Quick[n]):
            while True:
                Quick[n]=input(Text[n])
                if (is_int(Quick[n])) and (in_Between(Quick[n])):
                    break
                else:
                    print("nope not correct")
        else:
            while True:
                Quick[n]=input(Text[n])
                if not is_int(Quick[n]):
                    break
                else:
                    print("nope not correct")
    return Quick
       
 


def Advanced_setup(): ## Jannik
    print("Set advanced options ")
        ## Values for fox population
        ad_fox_initial_size = int(input("Input the initial fox population size ")) ## Noget med initial size og population skal ændres
        ad_fox_metabolism = int(input("Input fox metabolism as an integer "))
        ad_fox_max_age = int(input("Input fox maximum age as an integer "))
        ad_fox_maximum_energy = int(input("Input maximum energy for foxes "))
        ad_fox_reproduction_rate = float(input("Input reproductionrate for foxes "))
        ad_fox_reproduction_cost = int(input("Input reproduction cost for foxes "))
        ad_fox_reproduction_age = int(input("Input fox fertility age "))

        ad_fox_population = Population('foxes', ad_fox_initial_size, ad_fox_metabolism, ad_fox_max_age, ad_fox_maximum_energy, ad_fox_reproduction_rate, ad_fox_reproduction_cost, ad_fox_reproduction_age)

        #Values for bunny population
        ad_bunny_initial_size = int(input("Input the initial rabbit population size "))
        ad_bunny_metabolism = int(input("Input rabbit metabolism as an integer "))
        ad_bunny_max_age = int(input("Input rabbit maximum age as an integer "))
        ad_bunny_maximum_energy = int(input("Input maximum energy for rabbits "))
        ad_bunny_reproduction_rate = float(input("Input reproduction rate for rabbits "))  
        ad_bunny_reproduction_cost = int(input("Input reproduction cost for rabbits "))
        ad_bunny_reproduction_age = int(input("Input rabbit fertility age "))

        ad_bunny_population = Population('rabbits', ad_bunny_initial_size, ad_bunny_metabolism, ad_bunny_max_age, ad_bunny_maximum_energy, ad_bunny_reproduction_rate, ad_bunny_reproduction_cost, ad_bunny_reproduction_age)
        print(ad_bunny_population)

def Run(): ## Jannik
    print("run run runnnn")

def main_menu():
    '''
    The interface for the main menu
    this function contain 

    Returns
    -------
    None.

    '''
    Action_selectet=input("Input number of choice: ")
    
    if Action_selectet=="1": # Display parameters
        Print_parameters()
    elif Action_selectet=="2": # Quick setup
        Quick_setup()
        main_menu()
    elif Action_selectet=="3": #Advanced setup
        print("3")
    elif Action_selectet=="4": # Run
        print("4")
    elif Action_selectet=="5": # Quit
        print("5")
    else:
        main_menu()
    
    


main_menu()
